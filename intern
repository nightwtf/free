-- Key System Implementation for Mindhook UI Library
local KeySystem = {}

function KeySystem:Create(title, keyList, onSuccess)
    title = title or "Key System"
    keyList = keyList or {"123456"} -- Default key for testing
    onSuccess = onSuccess or function() end
    
    -- Create the key system UI
    local UserInputService = game:GetService("UserInputService")
    local isMobile = UserInputService.TouchEnabled and not UserInputService.MouseEnabled
    
    -- Check if there's any existing key system UI and remove it
    for i, v in pairs(game:GetService("CoreGui"):GetChildren()) do
        if v.Name == "KeySystem" then
            v:Destroy()
        end
    end
    
    -- Create main container
    local keySystemUI = Instance.new("ScreenGui")
    local mainFrame = Instance.new("Frame")
    local topFrame = Instance.new("Frame")
    local titleLabel = Instance.new("TextLabel")
    local contentFrame = Instance.new("Frame")
    local keyInputBox = Instance.new("TextBox")
    local getKeyButton = Instance.new("TextButton")
    local submitButton = Instance.new("TextButton")
    local statusLabel = Instance.new("TextLabel")
    
    keySystemUI.Name = "KeySystem"
    keySystemUI.Parent = game:GetService("CoreGui")
    keySystemUI.ResetOnSpawn = false
    keySystemUI.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    
    mainFrame.Name = "MainFrame"
    mainFrame.Parent = keySystemUI
    mainFrame.BackgroundColor3 = Color3.fromRGB(22, 22, 22)
    mainFrame.BorderColor3 = Color3.fromRGB(12, 12, 12)
    mainFrame.Position = UDim2.new(0.5, -150, 0.5, -100)
    mainFrame.Size = UDim2.new(0, 300, 0, 200)
    
    topFrame.Name = "TopFrame"
    topFrame.Parent = mainFrame
    topFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    topFrame.BorderColor3 = Color3.fromRGB(12, 12, 12)
    topFrame.BorderSizePixel = 0
    topFrame.Size = UDim2.new(1, 0, 0, 25)
    
    titleLabel.Name = "TitleLabel"
    titleLabel.Parent = topFrame
    titleLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.BackgroundTransparency = 1.000
    titleLabel.BorderSizePixel = 0
    titleLabel.Position = UDim2.new(0.02, 0, 0, 0)
    titleLabel.Size = UDim2.new(0.96, 0, 1, 0)
    titleLabel.Font = Enum.Font.Code
    titleLabel.Text = title
    titleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    titleLabel.TextSize = 14.000
    titleLabel.TextStrokeTransparency = 0.700
    titleLabel.TextXAlignment = Enum.TextXAlignment.Left
    
    contentFrame.Name = "ContentFrame"
    contentFrame.Parent = mainFrame
    contentFrame.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    contentFrame.BackgroundTransparency = 1.000
    contentFrame.BorderSizePixel = 0
    contentFrame.Position = UDim2.new(0, 0, 0, 25)
    contentFrame.Size = UDim2.new(1, 0, 1, -25)
    
    keyInputBox.Name = "KeyInputBox"
    keyInputBox.Parent = contentFrame
    keyInputBox.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
    keyInputBox.BorderColor3 = Color3.fromRGB(12, 12, 12)
    keyInputBox.Position = UDim2.new(0.5, -125, 0.25, -15)
    keyInputBox.Size = UDim2.new(0, 250, 0, 30)
    keyInputBox.Font = Enum.Font.Code
    keyInputBox.PlaceholderText = "Enter key here..."
    keyInputBox.Text = ""
    keyInputBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    keyInputBox.TextSize = 14.000
    keyInputBox.ClearTextOnFocus = false
    
    getKeyButton.Name = "GetKeyButton"
    getKeyButton.Parent = contentFrame
    getKeyButton.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
    getKeyButton.BorderColor3 = Color3.fromRGB(12, 12, 12)
    getKeyButton.Position = UDim2.new(0.5, -125, 0.5, -15)
    getKeyButton.Size = UDim2.new(0, 120, 0, 30)
    getKeyButton.Font = Enum.Font.Code
    getKeyButton.Text = "Get Key"
    getKeyButton.TextColor3 = Color3.fromRGB(145, 145, 145)
    getKeyButton.TextSize = 14.000
    
    submitButton.Name = "SubmitButton"
    submitButton.Parent = contentFrame
    submitButton.BackgroundColor3 = Color3.fromRGB(33, 33, 33)
    submitButton.BorderColor3 = Color3.fromRGB(12, 12, 12)
    submitButton.Position = UDim2.new(0.5, 5, 0.5, -15)
    submitButton.Size = UDim2.new(0, 120, 0, 30)
    submitButton.Font = Enum.Font.Code
    submitButton.Text = "Submit"
    submitButton.TextColor3 = Color3.fromRGB(145, 145, 145)
    submitButton.TextSize = 14.000
    
    statusLabel.Name = "StatusLabel"
    statusLabel.Parent = contentFrame
    statusLabel.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    statusLabel.BackgroundTransparency = 1.000
    statusLabel.BorderSizePixel = 0
    statusLabel.Position = UDim2.new(0.5, -125, 0.75, -15)
    statusLabel.Size = UDim2.new(0, 250, 0, 30)
    statusLabel.Font = Enum.Font.Code
    statusLabel.Text = "Please enter your key"
    statusLabel.TextColor3 = Color3.fromRGB(145, 145, 145)
    statusLabel.TextSize = 14.000
    
    -- Draggable functionality (same as in the original UI)
    local function enhancedDragger(frame)
        local dragging
        local dragInput
        local dragStart
        local startPos
        
        local function update(input)
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
        
        frame.InputBegan:Connect(function(input)
            if (input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch) and 
               input.Position.Y - frame.AbsolutePosition.Y <= topFrame.AbsoluteSize.Y then
                dragging = true
                dragStart = input.Position
                startPos = frame.Position
                
                input.Changed:Connect(function()
                    if input.UserInputState == Enum.UserInputState.End then
                        dragging = false
                    end
                end)
            end
        end)
        
        frame.InputChanged:Connect(function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end)
        
        UserInputService.InputChanged:Connect(function(input)
            if input == dragInput and dragging then
                update(input)
            end
        end)
    end
    
    enhancedDragger(mainFrame)
    
    -- Key system functionality
    getKeyButton.MouseButton1Click:Connect(function()
        -- Animation effect
        game:GetService("TweenService"):Create(getKeyButton, TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}):Play()
        
        -- You would typically redirect to a webpage or display key here
        statusLabel.Text = "Getting key..."
        statusLabel.TextColor3 = Color3.fromRGB(255, 255, 0)
        
        -- Simulate key retrieval (In a real scenario, you would implement your own key system)
        wait(1)
        statusLabel.Text = "Key copied to clipboard!"
        setclipboard(keyList[1]) -- For testing purposes, copy the first valid key
        
        wait(0.5)
        game:GetService("TweenService"):Create(getKeyButton, TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {BackgroundColor3 = Color3.fromRGB(33, 33, 33)}):Play()
    end)
    
    submitButton.MouseButton1Click:Connect(function()
        -- Animation effect
        game:GetService("TweenService"):Create(submitButton, TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}):Play()
        
        local enteredKey = keyInputBox.Text
        
        -- Check if the entered key is valid
        local keyValid = false
        for _, validKey in ipairs(keyList) do
            if enteredKey == validKey then
                keyValid = true
                break
            end
        end
        
        if keyValid then
            statusLabel.Text = "Key verified! Loading..."
            statusLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
            
            -- Fade out animation
            for i = 1, 10 do
                mainFrame.BackgroundTransparency = i/10
                topFrame.BackgroundTransparency = i/10
                wait(0.03)
            end
            
            -- Remove the key system UI
            keySystemUI:Destroy()
            
            -- Call the success callback function
            pcall(onSuccess)
        else
            statusLabel.Text = "Invalid key. Please try again."
            statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
            
            -- Shake animation
            local originalPosition = mainFrame.Position
            for i = 1, 3 do
                mainFrame.Position = UDim2.new(originalPosition.X.Scale, originalPosition.X.Offset - 10, originalPosition.Y.Scale, originalPosition.Y.Offset)
                wait(0.05)
                mainFrame.Position = UDim2.new(originalPosition.X.Scale, originalPosition.X.Offset + 10, originalPosition.Y.Scale, originalPosition.Y.Offset)
                wait(0.05)
            end
            mainFrame.Position = originalPosition
        end
        
        wait(0.5)
        game:GetService("TweenService"):Create(submitButton, TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {BackgroundColor3 = Color3.fromRGB(33, 33, 33)}):Play()
    end)
    
    -- Mobile-specific adjustments
    if isMobile then
        -- Adjust positions/sizes if needed for mobile
        keyInputBox.Size = UDim2.new(0, 250, 0, 35)
        getKeyButton.Size = UDim2.new(0, 120, 0, 35)
        submitButton.Size = UDim2.new(0, 120, 0, 35)
    end
    
    -- Key input handling for Enter key
    keyInputBox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            -- Simulate Submit button click
            game:GetService("TweenService"):Create(submitButton, TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.Out), {BackgroundColor3 = Color3.fromRGB(40, 40, 40)}):Play()
            
            local enteredKey = keyInputBox.Text
            
            -- Check if the entered key is valid
            local keyValid = false
            for _, validKey in ipairs(keyList) do
                if enteredKey == validKey then
                    keyValid = true
                    break
                end
            end
            
            if keyValid then
                statusLabel.Text = "Key verified! Loading..."
                statusLabel.TextColor3 = Color3.fromRGB(0, 255, 0)
                
                -- Fade out animation
                for i = 1, 10 do
                    mainFrame.BackgroundTransparency = i/10
                    topFrame.BackgroundTransparency = i/10
                    wait(0.03)
                end
                
                -- Remove the key system UI
                keySystemUI:Destroy()
                
                -- Call the success callback function
                pcall(onSuccess)
            else
                statusLabel.Text = "Invalid key. Please try again."
                statusLabel.TextColor3 = Color3.fromRGB(255, 0, 0)
                
                -- Shake animation
                local originalPosition = mainFrame.Position
                for i = 1, 3 do
                    mainFrame.Position = UDim2.new(originalPosition.X.Scale, originalPosition.X.Offset - 10, originalPosition.Y.Scale, originalPosition.Y.Offset)
                    wait(0.05)
                    mainFrame.Position = UDim2.new(originalPosition.X.Scale, originalPosition.X.Offset + 10, originalPosition.Y.Scale, originalPosition.Y.Offset)
                    wait(0.05)
                end
                mainFrame.Position = originalPosition
            end
            
            wait(0.5)
            game:GetService("TweenService"):Create(submitButton, TweenInfo.new(0.15, Enum.EasingStyle.Sine, Enum.EasingDirection.In), {BackgroundColor3 = Color3.fromRGB(33, 33, 33)}):Play()
        end
    end
    
    -- Return the key system UI object
    return keySystemUI
end

return KeySystem